
// generate basic binary data with 
// the modified fire model

val density = Val[Double]
val resistance = Val[Double]
val replication = Val[Int]

val burnt = Val[Double]
val binaryburnt = Val[Double]
val traversed = Val[Double]

val simmodel = NetLogo6Task(workDirectory / "Fire.nlogo",Seq("setup","runfire")) set (
    (inputs,outputs) += (density,resistance,replication),
      inputs += density mapped "density",
      inputs += resistance mapped "resistance",
      inputs += replication mapped "seed",
      outputs += burnt mapped "burnt",
      outputs += binaryburnt mapped "binary-burnt",
      outputs += traversed mapped "traversed"
    )



def datagen(purpose: String) = {

  //val currenthook = AppendToCSVFileHook(workDirectory / "data"/ purpose+".csv" )

  DirectSampling (
    evaluation = simmodel hook currenthook,
    sampling = (
        (density in (0.1 to 0.9 by 0.2))
       x (resistance in (0.1 to 0.9 by 0.2))
       x (replication in (UniformDistribution[Int](10000) take 2))
        )
  )

}

EmptyTask() -- Seq("training","validation").map{datagen}
